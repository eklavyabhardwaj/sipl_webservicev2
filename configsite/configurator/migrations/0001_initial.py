# Generated by Django 5.2.6 on 2025-09-16 11:03

import ckeditor_uploader.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=140)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=40)),
                ('subject', models.CharField(blank=True, max_length=180)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('handled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ERPSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enabled', models.BooleanField(default=False)),
                ('base_url', models.URLField(help_text='Base API URL, e.g. https://erp.example.com')),
                ('api_key', models.CharField(max_length=200)),
                ('api_secret', models.CharField(max_length=200)),
                ('lead_doctype', models.CharField(default='Lead', max_length=60)),
                ('lead_note_doctype', models.CharField(default='Lead Note', max_length=60)),
                ('naming_series', models.CharField(blank=True, default='.FY.LEADM.####', max_length=120)),
                ('deal_pipeline', models.CharField(blank=True, default='Machine', max_length=120)),
                ('source', models.CharField(blank=True, default='Configurator', max_length=120)),
                ('status', models.CharField(blank=True, default='Lead', max_length=120)),
            ],
            options={
                'verbose_name': 'ERP Settings',
                'verbose_name_plural': 'ERP Settings',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=140)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('item_code', models.CharField(blank=True, max_length=50, null=True, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=160)),
                ('slug', models.SlugField(help_text="URL path, e.g. 'about', 'home'", max_length=180, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('menu_order', models.PositiveIntegerField(default=0, help_text='Sort order for nav')),
                ('show_hero', models.BooleanField(default=True, help_text='Show hero section on this page')),
                ('hero_image', models.ImageField(blank=True, null=True, upload_to='page_heroes/')),
                ('hero_alt', models.CharField(blank=True, max_length=200)),
                ('hero_caption', models.CharField(blank=True, max_length=200)),
                ('external_url', models.URLField(blank=True, help_text='If set, this page redirects to this URL')),
                ('is_home', models.BooleanField(default=False, help_text='Make this the site homepage')),
                ('body', ckeditor_uploader.fields.RichTextUploadingField(blank=True)),
                ('footer_html', ckeditor_uploader.fields.RichTextUploadingField(blank=True)),
                ('custom_css', models.TextField(blank=True, help_text='Optional CSS for this page only.')),
            ],
            options={
                'ordering': ['menu_order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='ProductGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=140, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('hero_image', models.ImageField(blank=True, null=True, upload_to='group_heroes/')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ItemDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='item_docs/')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='configurator.item')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ItemFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=300)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='configurator.item')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ItemImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='item_images/')),
                ('alt_text', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='configurator.item')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='item',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='configurator.productgroup'),
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=300)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_required', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('input_type', models.CharField(choices=[('single', 'Single choice (radio)'), ('multi', 'Multiple choice (checkboxes)')], default='single', max_length=10)),
                ('affects_score', models.BooleanField(default=True, help_text='If off, selections from this question will NOT change scores (informational only).')),
                ('question_tag', models.CharField(blank=True, help_text='Short title or tag for this question (under 10 words).', max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='question_images/')),
                ('image_width', models.PositiveIntegerField(default=0, editable=False)),
                ('image_height', models.PositiveIntegerField(default=0, editable=False)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='configurator.productgroup')),
            ],
            options={
                'ordering': ['group', 'order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=240)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='choice_images/')),
                ('image_width', models.PositiveIntegerField(default=0, editable=False)),
                ('image_height', models.PositiveIntegerField(default=0, editable=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='configurator.question')),
            ],
            options={
                'ordering': ['question', 'order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='QuizSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(blank=True, max_length=140)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=40)),
                ('designation', models.CharField(blank=True, max_length=140)),
                ('company', models.CharField(blank=True, max_length=180)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='configurator.productgroup')),
                ('interested_items', models.ManyToManyField(blank=True, related_name='interested_sessions', to='configurator.item')),
                ('recommended_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configurator.item')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='configurator.choice')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='configurator.question')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='configurator.quizsession')),
            ],
        ),
        migrations.CreateModel(
            name='ChoiceImpact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(default=1.0)),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='impacts', to='configurator.choice')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='impacted_by', to='configurator.item')),
            ],
            options={
                'unique_together': {('choice', 'item')},
            },
        ),
        migrations.CreateModel(
            name='ItemSpec',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=120)),
                ('value', models.CharField(blank=True, max_length=400)),
                ('unit', models.CharField(blank=True, max_length=40)),
                ('order', models.PositiveIntegerField(default=0)),
                ('highlight', models.BooleanField(default=False, help_text='Emphasize this spec in UI')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specs', to='configurator.item')),
            ],
            options={
                'ordering': ['order', 'id'],
                'unique_together': {('item', 'label')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='item',
            unique_together={('group', 'name')},
        ),
    ]
